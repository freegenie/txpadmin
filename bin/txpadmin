#!/usr/bin/env ruby
require 'rubygems'
require 'txp_admin'
require 'optparse'
#Â require 'optparse/time'
require 'pp'

#Â http://rubyforge.org/docman/view.php/632/170/index.html

include TxpAdmin

options = {}

op = OptionParser.new() do |opts|
  opts.banner = "Usage: "     
  
  opts.on("-h", "--help", "Print this message") do 
    puts opts
    exit 
  end  
  
  opts.on("-V", "--version", "Print version") do 
    puts "TxpAdmin gem version #{Gem.searcher.find('txp_admin').version.to_s}" 
    exit
  end
  
  opts.on("--backup", "Backup database. Creates a zipped dump in the current directory.") do 
    TxpAdmin::MysqlConnect.backup
  end
  
  opts.on("--restore FILE_PATH", String, "Restore FILE_PATH dump into database.") do |file_path|    
    puts "Importing a dump. Enter to continue..."    
    input = gets("\n").strip 
    TxpAdmin::MysqlConnect.restore(file_path)
  end
  
  opts.on("--dbconsole", "Connect to mysql database.") do 
    TxpAdmin::MysqlConnect.console
    exit
  end
  
  opts.on("--purge-logs", "Remove logs from txplogs.") do 
    TxpAdmin::MysqlConnect.execute "delete from txp_log" 
    exit
  end
  
  # opts.on(nil, "--config", "Print txp configuration") do |v|
  #   begin
  #     config = `cat textpattern/config.php`      
  #   rescue => e
  #     puts "Not a textpattern directory"
  #     exit
  #   end
  # end
  
end 

args = ARGV 
args = ["-h"] if ARGV.size == 0 

begin 
  op.parse!(args)
rescue OptionParser::AmbiguousOption => e 
  op.parse!(["-h"])
rescue TxpAdmin::ConfigNotFound => e 
  puts "Config file not found"
rescue TxpAdmin::RestoreFileNotFound => e 
  puts "Restore file not found" 
rescue OptionParser::MissingArgument => e 
  puts "Missing argument"
  op.parse!(["-h"])
rescue Interrupt => e 
  puts "Interrupted"
end




